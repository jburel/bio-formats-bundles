<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
    http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>ome</groupId>
  <artifactId>bio-formats-bundles</artifactId>
  <version>5.8.2</version>
  <packaging>pom</packaging>

  <name>Bio-Formats bundle collection</name>
  <description>Create bundles of Bio-Formats jars and tools for distribution.</description>
  <url>https://www.openmicroscopy.org/bio-formats</url>
  <inceptionYear>2005</inceptionYear>

  <modules>
    <module>bftools</module>
    <module>bio-formats-package</module>
    <module>loci-tools</module>
  </modules>

  <properties>
    <!-- If two artifacts on the classpath use two different versions of the
         same dependency, behavior is inconsistent at best, and often broken.
         The following properties facilitate consistency of dependency
         versions between various projects in the SciJava software stack.
         When possible, we advise using the relevant groupId and version
         properties for your dependencies rather than hardcoding them. -->

    <release.version>5.8.2</release.version>
    <date>${maven.build.timestamp}</date>
    <year>2018</year>
    <project.rootdir>${basedir}</project.rootdir>
    <bioformats.version>5.10.0-SNAPSHOT</bioformats.version>
    <bio-formats_plugins.version>5.10.0-SNAPSHOT</bio-formats_plugins.version>
    <bio-formats-tools.version>5.10.0-SNAPSHOT</bio-formats-tools.version>
    <imagej1.version>1.52a</imagej1.version>
    <log4j.version>1.2.17</log4j.version>
    <slf4j.version>1.7.6</slf4j.version>

    <!-- NB: Avoid platform encoding warning when copying resources. -->
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <!-- NB: Specify formatting of the maven.build.timestamp property. -->
    <maven.build.timestamp.format>d MMMMM yyyy</maven.build.timestamp.format>

    <!-- NB: Override argLine property for extra maven-surefire-plugin args. -->
    <argLine/>
  </properties>

  <build>
    <!-- It is nice for "mvn" with no arguments to do something reasonable. -->
    <defaultGoal>install</defaultGoal>

    <plugins>
      <!-- Create -sources.jar when building. -->
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>

      <!-- Add Implementation-Build entry to JAR manifest. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>buildnumber-maven-plugin</artifactId>
      </plugin>

      <!-- Enable 'license:' goals. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <configuration>
          <licenseName>gpl_v2</licenseName>
          <organizationName>Open Microscopy Environment:
  - Board of Regents of the University of Wisconsin-Madison
  - Glencoe Software, Inc.
  - University of Dundee</organizationName>
            <!-- NB: Avoid stomping on variant copyright holders. -->
            <canUpdateCopyright>false</canUpdateCopyright>
          <roots>
            <root>src</root>
            <root>test</root>
            <root>utils</root>
            <root>doc</root>
          </roots>
        </configuration>
      </plugin>
    </plugins>

    <!-- We use wagon-webdav-jackrabbit 1.0 for deploys, since it is
         compatible with both Maven 2.2.x and Maven 3.0.x cross-platform. -->
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav-jackrabbit</artifactId>
        <version>1.0</version>
      </extension>
    </extensions>

    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.7.0</version>
          <!-- Require the Java 7 platform. -->
          <configuration>
            <source>1.7</source>
            <target>1.7</target>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>

        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>

        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>

        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.1.0</version>
          <!-- Always add classpath to JAR manifests. -->
          <configuration>
            <skipIfEmpty>true</skipIfEmpty>
            <archive>
              <manifest>
                <addClasspath>true</addClasspath>
                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
              </manifest>
              <manifestEntries>
                <!-- Add SCM revision from buildnumber plugin, if available. -->
                <Implementation-Build>${buildNumber}</Implementation-Build>
                <!-- Add a formatted timestamp for the build. -->
                <Implementation-Date>${maven.build.timestamp}</Implementation-Date>
              </manifestEntries>
            </archive>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>test-jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-plugin-plugin</artifactId>
          <version>3.5.2</version>
        </plugin>

        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.3</version>
          <dependencies>
            <dependency>
              <groupId>org.apache.maven.scm</groupId>
              <artifactId>maven-scm-provider-gitexe</artifactId>
              <version>1.9</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>

        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>

        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>3.0.1</version>
          <!-- Build source artifact in addition to main artifact. -->
          <executions>
            <execution>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.0</version>
          <!-- Make sure that:
               A) unit tests run with sufficient RAM allocated;
               B) unit tests do not pop a Java dock icon on OS X;
               C) additional args can be given via argLine property;

               Sometimes, one needs to pass JVM options to the JVM
               running the unit tests, such as -verbose:class or
               -Djava.awt.headless=true.

               Unfortunately, maven-surefire does not expose a
               command-line interface to do so, therefore let's
               simulate it by re-using the property 'argLine' to
               specify those options. -->
          <configuration>
            <argLine>-Xms512m -Xmx512m -Dapple.awt.UIElement="true" ${argLine}</argLine>
          </configuration>
        </plugin>

        <!-- Build Number Maven plugin -
             http://mojo.codehaus.org/buildnumber-maven-plugin/
             This plugin embeds a build number in the JAR manifest. -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>1.4</version>
          <!-- Record SCM revision in manifest. -->
          <executions>
            <execution>
              <phase>validate</phase>
              <goals>
                <goal>create</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
            <revisionOnScmFailure>UNKNOWN</revisionOnScmFailure>
          </configuration>
        </plugin>

        <!-- License Maven plugin -
             http://mojo.codehaus.org/license-maven-plugin/
             This plugin manages project licenses and source file headers. -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>1.16</version>
          <configuration>
            <projectName>${project.description}</projectName>
            <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
            <canUpdateDescription>true</canUpdateDescription>
            <canUpdateCopyright>true</canUpdateCopyright>
            <extraExtensions>
              <bsh>java</bsh>
              <config>properties</config>
              <ijm>java</ijm>
            </extraExtensions>
          </configuration>
        </plugin>

        <!-- Versions Maven plugin -
             http://mojo.codehaus.org/versions-maven-plugin/
             Check for new plugin versions using
             "mvn versions:display-plugin-updates" -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <version>2.5</version>
        </plugin>

      </plugins>
    </pluginManagement>
  </build>

  <prerequisites>
    <maven>3.0.5</maven>
  </prerequisites>

  <organization>
    <name>Open Microscopy Environment</name>
    <url>http://www.openmicroscopy.org/</url>
  </organization>

  <issueManagement>
    <system>Trac</system>
    <url>https://trac.openmicroscopy.org/ome</url>
  </issueManagement>

  <ciManagement>
    <system>Jenkins</system>
    <url>https://ci.openmicroscopy.org/</url>
  </ciManagement>

  <mailingLists>
    <mailingList>
      <name>OME-users</name>
      <subscribe>http://lists.openmicroscopy.org.uk/mailman/listinfo/ome-users/</subscribe>
      <unsubscribe>http://lists.openmicroscopy.org.uk/mailman/listinfo/ome-users/</unsubscribe>
      <post>ome-users@lists.openmicroscopy.org.uk</post>
      <archive>http://lists.openmicroscopy.org.uk/pipermail/ome-users/</archive>
    </mailingList>
    <mailingList>
      <name>OME-devel</name>
      <subscribe>http://lists.openmicroscopy.org.uk/mailman/listinfo/ome-devel/</subscribe>
      <unsubscribe>http://lists.openmicroscopy.org.uk/mailman/listinfo/ome-devel/</unsubscribe>
      <post>ome-devel@lists.openmicroscopy.org.uk</post>
      <archive>http://lists.openmicroscopy.org.uk/pipermail/ome-devel/</archive>
    </mailingList>
  </mailingLists>

  <scm>
    <connection>scm:git:git://github.com/ome/bio-formats-bundles</connection>
    <developerConnection>scm:git:git@github.com:ome/bio-formats-bundles</developerConnection>
    <tag>HEAD</tag>
    <url>http://github.com/ome/bio-formats-bundles</url>
  </scm>

  <!-- NB: for parent project -->
  <repositories>
    <repository>
      <id>central</id>
      <name>Central Repository</name>
      <url>https://repo.maven.apache.org/maven2</url>
    </repository>
    <repository>
      <id>unidata.releases</id>
      <url>https://artifacts.unidata.ucar.edu/content/repositories/unidata-releases</url>
      <snapshots><enabled>false</enabled></snapshots>
      </repository>
    <repository>
      <id>ome</id>
      <name>OME Artifactory</name>
      <url>https://artifacts.openmicroscopy.org/artifactory/maven/</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>central</id>
      <name>Central Repository</name>
      <url>https://repo.maven.apache.org/maven2</url>
      <layout>default</layout>
    </pluginRepository>
  </pluginRepositories>

  <distributionManagement>
    <repository>
      <id>ome.staging</id>
      <name>OME Staging Repository</name>
      <url>https://artifacts.openmicroscopy.org/artifactory/ome.staging</url>
    </repository>
    <snapshotRepository>
      <id>ome.snapshots</id>
      <name>OME Snapshots Repository</name>
      <url>https://artifacts.openmicroscopy.org/artifactory/ome.snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <profiles>
    <!-- Run integration tests when "-P run-its" is passed.
         This works using the maven-invoker-plugin. -->
    <profile>
      <id>run-its</id>
      <build>
        <defaultGoal>integration-test</defaultGoal>
        <plugins>
          <plugin>
            <artifactId>maven-invoker-plugin</artifactId>
            <version>3.1.0</version>
            <configuration>
              <debug>${invoker.debug}</debug>
              <showErrors>true</showErrors>
              <streamLogs>true</streamLogs>
              <projectsDirectory>src/it</projectsDirectory>
              <cloneProjectsTo>${project.build.directory}/it</cloneProjectsTo>
              <pomIncludes>
                <pomInclude>*/pom.xml</pomInclude>
              </pomIncludes>
              <settingsFile>src/it/settings.xml</settingsFile>
              <localRepositoryPath>${project.build.directory}/local-repo</localRepositoryPath>
              <preBuildHookScript>setup.bsh</preBuildHookScript>
              <postBuildHookScript>verify.bsh</postBuildHookScript>
            </configuration>
            <executions>
              <execution>
                <id>integration-test</id>
                <goals>
                  <goal>install</goal>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
